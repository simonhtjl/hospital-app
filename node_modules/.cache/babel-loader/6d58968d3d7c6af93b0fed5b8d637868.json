{"ast":null,"code":"var _jsxFileName = \"D:\\\\2022\\\\JDT 9\\\\MiniProject\\\\Wolo\\\\hospital-app-main\\\\src\\\\component\\\\Treatment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Css/Treatment.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Treatment = () => {\n  _s();\n\n  // const [data, setData] = useState([]);\n  const [pasienid, setPasien] = useState([]);\n  let token = JSON.parse(localStorage.getItem(\"dokter-info\"));\n\n  const getData = async id => {\n    try {\n      let response = await fetch(\"http://localhost:8080/api/test/dokter/treatment/\" + id, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${token[0]}`\n        }\n      });\n      response = await response.json();\n      setPasien(response);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  let no = 1; // // function for submit treatment====================================================\n  // const [diagnosis, setDiagnose] = useState(\"\");\n  // const [deskripsi, setDetailTreatment] = useState(\"\");\n  // const [resepobat, setReceipt] = useState(\"\");\n  // const [nama, setName] = useState(\"\");\n  // const navigate = useNavigate();\n  // async function inputTreatment() {\n  //   let item = { nama, diagnosis, deskripsi, resepobat };\n  //   let result = await fetch(\n  //     \"http://localhost:8080/api/test/dokter/treatment\",\n  //     {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         Accept: \"application/json\",\n  //         Authorization: `Bearer ${token[0]}`,\n  //       },\n  //       body: JSON.stringify(item),\n  //     }\n  //   );\n  //   result = await result.json();\n  //   if (result.roles === \"ROLE_DOKTER\") {\n  //     localStorage.setItem(\n  //       \"dokter-info\",\n  //       JSON.stringify([result.accessToken, result.username])\n  //     );\n  //     navigate(\"/dokter/daftarpasien\");\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"treatment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"treat-box1\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"treat-title1\",\n        children: \"DETAILS PATIENT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), pasienid.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [\"Pasien \", no++]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Nama : \", item.nama, \"Umur : \", item.umur, \"Jenis Kelamin : \", item.jeniskelamin, \"Gol Darah : \", item.golongandarah, \"Gejala : \", item.gejala]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Treatment, \"HVFfXsd4oA7xRRPtvPjTIXvefOI=\");\n\n_c = Treatment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Treatment\");","map":{"version":3,"sources":["D:/2022/JDT 9/MiniProject/Wolo/hospital-app-main/src/component/Treatment.js"],"names":["React","useEffect","useState","Button","Card","Form","useNavigate","Treatment","pasienid","setPasien","token","JSON","parse","localStorage","getItem","getData","id","response","fetch","headers","json","e","console","log","message","no","map","item","nama","umur","jeniskelamin","golongandarah","gejala"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,QAAmC,iBAAnC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,qBAAP;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B;AACA,QAAM,CAACC,QAAD,EAAUC,SAAV,IAAuBP,QAAQ,CAAC,EAAD,CAArC;AACA,MAAIQ,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAZ;;AAEA,QAAMC,OAAO,GAAG,MAAOC,EAAP,IAAa;AAC3B,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,qDAAmDF,EAD3B,EAExB;AACEG,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,oBAAU,kBAFH;AAGP,2BAAkB,UAAST,KAAK,CAAC,CAAD,CAAI;AAH7B;AADX,OAFwB,CAA1B;AAUAO,MAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACG,IAAT,EAAjB;AACAX,MAAAA,SAAS,CAACQ,QAAD,CAAT;AACD,KAbD,CAaE,OAAOI,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACD;AACF,GAjBD;;AAoBAvB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAGA,MAAIU,EAAE,GAAG,CAAT,CA5B6B,CA8B7B;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGjB,QAAQ,CAACkB,GAAT,CAAcC,IAAD,iBACZ,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD,CAAM,MAAN;AAAA,gCAAqBF,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,iCACE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACUE,IAAI,CAACC,IADf,aAEUD,IAAI,CAACE,IAFf,sBAGmBF,IAAI,CAACG,YAHxB,kBAIeH,IAAI,CAACI,aAJpB,eAKYJ,IAAI,CAACK,MALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+DD,CA/HM;;GAAMzB,S;;KAAAA,S","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Css/Treatment.css\";\n\nexport const Treatment = () => {\n  // const [data, setData] = useState([]);\n  const [pasienid,setPasien] = useState([]);\n  let token = JSON.parse(localStorage.getItem(\"dokter-info\"));\n\n  const getData = async (id) =>{\n    try {\n      let response = await fetch(\n        \"http://localhost:8080/api/test/dokter/treatment/\"+id,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${token[0]}`,\n          },\n        }\n      );\n      response = await response.json();\n      setPasien(response);\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n\n  useEffect(() => {\n    getData();\n  }, []);\n  let no = 1;\n\n  // // function for submit treatment====================================================\n  // const [diagnosis, setDiagnose] = useState(\"\");\n  // const [deskripsi, setDetailTreatment] = useState(\"\");\n  // const [resepobat, setReceipt] = useState(\"\");\n  // const [nama, setName] = useState(\"\");\n\n  // const navigate = useNavigate();\n\n  // async function inputTreatment() {\n  //   let item = { nama, diagnosis, deskripsi, resepobat };\n  //   let result = await fetch(\n  //     \"http://localhost:8080/api/test/dokter/treatment\",\n  //     {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         Accept: \"application/json\",\n  //         Authorization: `Bearer ${token[0]}`,\n  //       },\n  //       body: JSON.stringify(item),\n  //     }\n  //   );\n\n  //   result = await result.json();\n\n  //   if (result.roles === \"ROLE_DOKTER\") {\n  //     localStorage.setItem(\n  //       \"dokter-info\",\n  //       JSON.stringify([result.accessToken, result.username])\n  //     );\n  //     navigate(\"/dokter/daftarpasien\");\n  //   }\n  // }\n\n  return (\n    <div className=\"treatment\">\n      <div className=\"treat-box1\">\n        <p className=\"treat-title1\">DETAILS PATIENT</p>\n        {pasienid.map((item) => (\n          <Card>\n            <Card.Header>Pasien {no++}</Card.Header>\n            <Card.Body>\n              <Card.Text>\n                Nama : {item.nama}\n                Umur : {item.umur}\n                Jenis Kelamin : {item.jeniskelamin}\n                Gol Darah : {item.golongandarah}\n                Gejala : {item.gejala}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        ))}\n      </div>\n      {/* <div className=\"treat-box2\">\n        <p className=\"treat-title2\">THE TREATMENT</p>\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Please input the diagnose for patient\"\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Diagnosis</Form.Label>\n            <Form.Control\n              type=\"diagnosis\"\n              placeholder=\"Please input the diagnose for patient\"\n              onChange={(e) => setDiagnose(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Detail Treatment</Form.Label>\n            <Form.Control\n              type=\"detailtreatment\"\n              rows={4}\n              placeholder=\"Please input the treatment details\"\n              onChange={(e) => setDetailTreatment(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Receipt</Form.Label>\n            <Form.Control\n              type=\"reciept\"\n              rows={4}\n              placeholder=\"Please input the reciept\"\n              onChange={(e) => setReceipt(e.target.value)}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" onClick={inputTreatment}>\n            Submit\n          </Button>\n        </Form>\n      </div> */}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}