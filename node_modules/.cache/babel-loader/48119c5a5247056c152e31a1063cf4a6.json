{"ast":null,"code":"var _jsxFileName = \"D:\\\\2022\\\\JDT 9\\\\MiniProject\\\\Wolo\\\\hospital-app-main\\\\src\\\\component\\\\Treatment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Css/Treatment.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Treatment = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  let token = JSON.parse(localStorage.getItem(\"dokter-info\"));\n\n  const getData = async () => {\n    try {\n      let response = await fetch(\"http://localhost:8080/api/test/dokter/daftarpasien\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: `Bearer ${token[0]}`\n        }\n      });\n      response = await response.json();\n      setData(response);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  let no = 1; // function for submit treatment====================================================\n\n  const [diagnosis, setDiagnose] = useState(\"\");\n  const [deskripsi, setDetailTreatment] = useState(\"\");\n  const [resepobat, setReceipt] = useState(\"\");\n  const [nama, setName] = useState(\"\");\n  const navigate = useNavigate();\n\n  async function inputTreatment() {\n    let item = {\n      nama,\n      diagnosis,\n      deskripsi,\n      resepobat\n    };\n    let result = await fetch(\"http://localhost:8080/api/test/dokter/treatment\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token[0]}`\n      },\n      body: JSON.stringify(item)\n    });\n    result = await result.json();\n\n    if (result.roles === \"ROLE_DOKTER\") {\n      localStorage.setItem(\"dokter-info\", JSON.stringify([result.accessToken, result.username]));\n      navigate(\"/dokter/daftarpasien\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"treatment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"treat-box1\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"treat-title1\",\n        children: \"DETAILS PATIENT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [\"Pasien \", no++]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Nama : \", item.nama, \"Umur : \", item.umur, \"Jenis Kelamin : \", item.jeniskelamin, \"Gol Darah : \", item.golongandarah, \"Gejala : \", item.gejala]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"treat-box2\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"treat-title2\",\n        children: \"THE TREATMENT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlInput1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Please input the diagnose for patient\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlInput1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Diagnosis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"diagnosis\",\n            placeholder: \"Please input the diagnose for patient\",\n            onChange: e => setDiagnose(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlTextarea1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Detail Treatment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"detailtreatment\",\n            rows: 4,\n            placeholder: \"Please input the treatment details\",\n            onChange: e => setDetailTreatment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlTextarea1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Receipt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"reciept\",\n            rows: 4,\n            placeholder: \"Please input the reciept\",\n            onChange: e => setReceipt(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: inputTreatment,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Treatment, \"EVYog4GVdd7xycnwqDbPIsLyKBI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Treatment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Treatment\");","map":{"version":3,"sources":["D:/2022/JDT 9/MiniProject/Wolo/hospital-app-main/src/component/Treatment.js"],"names":["React","useEffect","useState","Button","Card","Form","useNavigate","Treatment","data","setData","token","JSON","parse","localStorage","getItem","getData","response","fetch","headers","Accept","Authorization","json","e","console","log","message","no","diagnosis","setDiagnose","deskripsi","setDetailTreatment","resepobat","setReceipt","nama","setName","navigate","inputTreatment","item","result","method","body","stringify","roles","setItem","accessToken","username","map","umur","jeniskelamin","golongandarah","gejala","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Css/Treatment.css\";\n\nexport const Treatment = () => {\n  const [data, setData] = useState([]);\n  let token = JSON.parse(localStorage.getItem(\"dokter-info\"));\n\n  const getData = async () => {\n    try {\n      let response = await fetch(\n        \"http://localhost:8080/api/test/dokter/daftarpasien\",\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token[0]}`,\n          },\n        }\n      );\n      response = await response.json();\n      setData(response);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  let no = 1;\n\n  // function for submit treatment====================================================\n  const [diagnosis, setDiagnose] = useState(\"\");\n  const [deskripsi, setDetailTreatment] = useState(\"\");\n  const [resepobat, setReceipt] = useState(\"\");\n  const [nama, setName] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  async function inputTreatment() {\n    let item = { nama, diagnosis, deskripsi, resepobat };\n    let result = await fetch(\n      \"http://localhost:8080/api/test/dokter/treatment\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: `Bearer ${token[0]}`,\n        },\n        body: JSON.stringify(item),\n      }\n    );\n\n    result = await result.json();\n\n    if (result.roles === \"ROLE_DOKTER\") {\n      localStorage.setItem(\n        \"dokter-info\",\n        JSON.stringify([result.accessToken, result.username])\n      );\n      navigate(\"/dokter/daftarpasien\");\n    }\n  }\n\n  return (\n    <div className=\"treatment\">\n      <div className=\"treat-box1\">\n        <p className=\"treat-title1\">DETAILS PATIENT</p>\n        {data.map((item) => (\n          <Card>\n            <Card.Header>Pasien {no++}</Card.Header>\n            <Card.Body>\n              <Card.Text>\n                Nama : {item.nama}\n                Umur : {item.umur}\n                Jenis Kelamin : {item.jeniskelamin}\n                Gol Darah : {item.golongandarah}\n                Gejala : {item.gejala}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        ))}\n      </div>\n      <div className=\"treat-box2\">\n        <p className=\"treat-title2\">THE TREATMENT</p>\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Please input the diagnose for patient\"\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Diagnosis</Form.Label>\n            <Form.Control\n              type=\"diagnosis\"\n              placeholder=\"Please input the diagnose for patient\"\n              onChange={(e) => setDiagnose(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Detail Treatment</Form.Label>\n            <Form.Control\n              type=\"detailtreatment\"\n              rows={4}\n              placeholder=\"Please input the treatment details\"\n              onChange={(e) => setDetailTreatment(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Receipt</Form.Label>\n            <Form.Control\n              type=\"reciept\"\n              rows={4}\n              placeholder=\"Please input the reciept\"\n              onChange={(e) => setReceipt(e.target.value)}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" onClick={inputTreatment}>\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}